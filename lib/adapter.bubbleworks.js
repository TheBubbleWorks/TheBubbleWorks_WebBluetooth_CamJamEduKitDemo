!function(a,b){"function"==typeof define&&define.amd?a.navigator.bluetooth?define(a.navigator.bluetooth):define(["es6-promise","es6-map","bluetooth.helpers"],b):"object"==typeof exports?module.exports=b(Promise,Map,require("./bluetooth.helpers")):a.bleat=a.navigator.bluetooth||b(a.Promise,a.Map,a.bleatHelpers)}(this,function(a,b,c){"use strict";function d(a,b){return function(c){a(b+": "+c)}}function e(a,b){b&&Object.keys(b).forEach(function(c){b[c]&&a.hasOwnProperty(c)&&("[object Object]"===Object.prototype.toString.call(a[c])?e(a[c],b[c]):"[object Map]"===Object.prototype.toString.call(a[c])&&"[object Object]"===Object.prototype.toString.call(b[c])?Object.keys(b[c]).forEach(function(d){a[c].set(d,b[c][d])}):a[c]=b[c])})}function f(a){return function(b,c,d){a.indexOf(b)<0||(o[this]||(o[this]={}),o[this][b]||(o[this][b]=[]),o[this][b].push(c))}}function g(a,b,c){if(o[this]&&o[this][a]){var d=o[this][a].indexOf(b);d>=0&&o[this][a].splice(d,1),0===o[this][a].length&&delete o[this][a],0===Object.keys(o[this]).length&&delete o[this]}}function h(a){o[this]&&o[this][a.type]&&(a.target=this,o[this][a.type].forEach(function(b){"function"==typeof b&&b(a)}))}function i(a,b){var d=!1,e=[];return a.filters.forEach(function(a){if(!a.name||a.name===b.name){if(a.namePrefix){if(a.namePrefix.length>b.name.length)return;if(a.namePrefix!==b.name.substr(0,a.namePrefix.length))return}if(a.services){var f=a.services.map(c.getServiceUUID),g=f.every(function(a){return b.uuids.indexOf(a)>-1});if(!g)return;e=e.concat(f)}d=!0}}),d?(a.optionalServices&&(e=e.concat(a.optionalServices.map(c.getServiceUUID))),b._allowedServices=e.filter(function(a,b,c){return c.indexOf(a)===b}),b):!1}function j(b){return new a(function(a,e){if(null!==p)return e("requestDevice error: request in progress");if(!b.deviceFound){if(!b.filters||0===b.filters.length)return e(new TypeError("requestDevice error: no filters specified"));var f=b.filters.some(function(a){return 0===Object.keys(a).length});if(f)return e(new TypeError("requestDevice error: empty filter specified"));var g=b.filters.some(function(a){return"undefined"!=typeof a.namePrefix&&""===a.namePrefix});if(g)return e(new TypeError("requestDevice error: empty namePrefix specified"))}var h=[];b.filters&&b.filters.forEach(function(a){a.services&&(h=h.concat(a.services.map(c.getServiceUUID)))}),h=h.filter(function(a,b,c){return c.indexOf(a)===b});var j=b.scanTime||l,n=b.deviceFound?a:function(){e("requestDevice error: no devices found")};m.startScan(h,function(c){if(b.deviceFound||(c=i(b,c)),c){var d=new q(c);b.deviceFound&&!b.deviceFound(d)||k().then(function(){a(d)})}},function(){p=setTimeout(function(){k().then(n)},j)},d(e,"requestDevice error"))})}function k(){return new a(function(a,b){p&&(clearTimeout(p),p=null,m.stopScan()),a()})}var l=10240,m=null,n={},o={},p=null,q=function(a){this._handle=null,this._allowedServices=[],this.id="unknown",this.name=null,this.adData={appearance:null,txPower:null,rssi:null,manufacturerData:new b,serviceData:new b},this.deviceClass=null,this.vendorIDSource="bluetooth",this.vendorID=null,this.productID=null,this.productVersion=null,this.gatt=new r,this.gatt.device=this,this.uuids=[],e(this,a)};q.prototype.addEventListener=f(["gattserverdisconnected"]),q.prototype.removeEventListener=g,q.prototype.dispatchEvent=h;var r=function(){this._services=null,this.device=null,this.connected=!1};r.prototype.connect=function(){return new a(function(a,b){return this.connected?b("connect error: device already connected"):void m.connect(this.device._handle,function(){this.connected=!0,a(this)}.bind(this),function(){this.connected=!1,this.device.dispatchEvent({type:"gattserverdisconnected",bubbles:!0})}.bind(this),d(b,"connect error"))}.bind(this))},r.prototype.disconnect=function(){m.disconnect(this.device._handle),this.connected=!1},r.prototype.getPrimaryService=function(b){return new a(function(a,c){return this.connected?b?void this.getPrimaryServices(b).then(function(b){return 1!==b.length?c("getPrimaryService error: service not found"):void a(b[0])})["catch"](function(a){c(a)}):c("getPrimaryService error: no service specified"):c("getPrimaryService error: device not connected")}.bind(this))},r.prototype.getPrimaryServices=function(b){return new a(function(a,e){function f(){if(!b)return a(this._services);var d=this._services.filter(function(a){return a.uuid===c.getServiceUUID(b)});return 1!==d.length?e("getPrimaryServices error: service not found"):void a(d)}return this.connected?this._services?f.call(this):void m.discoverServices(this.device._handle,this.device._allowedServices,function(a){this._services=a.map(function(a){return a.device=this.device,new s(a)}.bind(this)),f.call(this)}.bind(this),d(e,"getPrimaryServices error")):e("getPrimaryServices error: device not connected")}.bind(this))};var s=function(a){this._handle=null,this._services=null,this._characteristics=null,this.device=null,this.uuid=null,this.isPrimary=!1,e(this,a),this.dispatchEvent({type:"serviceadded",bubbles:!0})};s.prototype.getCharacteristic=function(b){return new a(function(a,c){return this.device.gatt.connected?b?void this.getCharacteristics(b).then(function(b){return 1!==b.length?c("getCharacteristic error: characteristic not found"):void a(b[0])})["catch"](function(a){c(a)}):c("getCharacteristic error: no characteristic specified"):c("getCharacteristic error: device not connected")}.bind(this))},s.prototype.getCharacteristics=function(b){return new a(function(a,e){function f(){if(!b)return a(this._characteristics);var d=this._characteristics.filter(function(a){return a.uuid===c.getCharacteristicUUID(b)});return 1!==d.length?e("getCharacteristics error: characteristic not found"):void a(d)}return this.device.gatt.connected?this._characteristics?f.call(this):void m.discoverCharacteristics(this._handle,[],function(a){this._characteristics=a.map(function(a){return a.service=this,new t(a)}.bind(this)),f.call(this)}.bind(this),d(e,"getCharacteristics error")):e("getCharacteristics error: device not connected")}.bind(this))},s.prototype.getIncludedService=function(b){return new a(function(a,c){return this.device.gatt.connected?b?void this.getIncludedServices(b).then(function(b){return 1!==b.length?c("getIncludedService error: service not found"):void a(b[0])})["catch"](function(a){c(a)}):c("getIncludedService error: no service specified"):c("getIncludedService error: device not connected")}.bind(this))},s.prototype.getIncludedServices=function(b){return new a(function(a,e){function f(){if(!b)return a(this._services);var d=this._services.filter(function(a){return a.uuid===c.getServiceUUID(b)});return 1!==d.length?e("getIncludedServices error: service not found"):void a(d)}return this.device.gatt.connected?this._services?f.call(this):void m.discoverIncludedServices(this._handle,this.device._allowedServices,function(a){this._services=a.map(function(a){return a.device=this.device,new s(a)}.bind(this)),f.call(this)}.bind(this),d(e,"getIncludedServices error")):e("getIncludedServices error: device not connected")}.bind(this))},s.prototype.addEventListener=f(["serviceadded","servicechanged","serviceremoved"]),s.prototype.removeEventListener=g,s.prototype.dispatchEvent=h;var t=function(a){this._handle=null,this._descriptors=null,this.service=null,this.uuid=null,this.properties={broadcast:!1,read:!1,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1},this.value=null,e(this,a)};t.prototype.getDescriptor=function(b){return new a(function(a,c){return this.service.device.gatt.connected?b?void this.getDescriptors(b).then(function(b){return 1!==b.length?c("getDescriptor error: descriptor not found"):void a(b[0])})["catch"](function(a){c(a)}):c("getDescriptor error: no descriptor specified"):c("getDescriptor error: device not connected")}.bind(this))},t.prototype.getDescriptors=function(b){return new a(function(a,e){function f(){if(!b)return a(this._descriptors);var d=this._descriptors.filter(function(a){return a.uuid===c.getDescriptorUUID(b)});return 1!==d.length?e("getDescriptors error: descriptor not found"):void a(d)}return this.service.device.gatt.connected?this._descriptors?f.call(this):void m.discoverDescriptors(this._handle,[],function(a){this._descriptors=a.map(function(a){return a.characteristic=this,new u(a)}.bind(this)),f.call(this)}.bind(this),d(e,"getDescriptors error")):e("getDescriptors error: device not connected")}.bind(this))},t.prototype.readValue=function(){return new a(function(a,b){return this.service.device.gatt.connected?void m.readCharacteristic(this._handle,function(b){this.value=b,a(b),this.dispatchEvent({type:"characteristicvaluechanged",bubbles:!0})}.bind(this),d(b,"readValue error")):b("readValue error: device not connected")}.bind(this))},t.prototype.writeValue=function(b){return new a(function(a,c){if(!this.service.device.gatt.connected)return c("writeValue error: device not connected");var e=b.buffer||b,f=new DataView(e);m.writeCharacteristic(this._handle,f,function(){this.value=f,a()}.bind(this),d(c,"writeValue error"))}.bind(this))},t.prototype.startNotifications=function(){return new a(function(a,b){return this.service.device.gatt.connected?void m.enableNotify(this._handle,function(a){this.value=a,this.dispatchEvent({type:"characteristicvaluechanged",bubbles:!0})}.bind(this),a,d(b,"startNotifications error")):b("startNotifications error: device not connected")}.bind(this))},t.prototype.stopNotifications=function(){return new a(function(a,b){return this.service.device.gatt.connected?void m.disableNotify(this._handle,a,d(b,"stopNotifications error")):b("stopNotifications error: device not connected")}.bind(this))},t.prototype.addEventListener=f(["characteristicvaluechanged"]),t.prototype.removeEventListener=g,t.prototype.dispatchEvent=h;var u=function(a){this._handle=null,this.characteristic=null,this.uuid=null,this.value=null,e(this,a)};return u.prototype.readValue=function(){return new a(function(a,b){return this.characteristic.service.device.gatt.connected?void m.readDescriptor(this._handle,function(b){this.value=b,a(b)}.bind(this),d(b,"readValue error")):b("readValue error: device not connected")}.bind(this))},u.prototype.writeValue=function(b){return new a(function(a,c){if(!this.characteristic.service.device.gatt.connected)return c("writeValue error: device not connected");var e=b.buffer||b,f=new DataView(e);m.writeDescriptor(this._handle,f,function(){this.value=f,a()}.bind(this),d(c,"writeValue error"))}.bind(this))},{_addAdapter:function(a,b){n[a]=b,m=b},requestDevice:j,cancelRequest:k}}),function(a,b){"function"==typeof define&&define.amd?define(b):"object"==typeof exports?module.exports=b():a.bleatHelpers=b()}(this,function(){"use strict";function a(a){return"number"==typeof a&&(a=a.toString(16)),a=a.toLowerCase(),a.length<=8&&(a=("00000000"+a).slice(-8)+"-0000-1000-8000-00805f9b34fb"),32===a.length&&(a=a.match(/^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/).splice(1).join("-")),a}function b(b){return e[b]&&(b=e[b]),a(b)}function c(b){return f[b]&&(b=f[b]),a(b)}function d(b){return g[b]&&(b=g[b]),a(b)}var e={alert_notification:6161,automation_io:6165,battery_service:6159,blood_pressure:6160,body_composition:6171,bond_management:6174,continuous_glucose_monitoring:6175,current_time:6149,cycling_power:6168,cycling_speed_and_cadence:6166,device_information:6154,environmental_sensing:6170,generic_access:6144,generic_attribute:6145,glucose:6152,health_thermometer:6153,heart_rate:6157,human_interface_device:6162,immediate_alert:6146,indoor_positioning:6177,internet_protocol_support:6176,link_loss:6147,location_and_navigation:6169,next_dst_change:6151,phone_alert_status:6158,pulse_oximeter:6178,reference_time_update:6150,running_speed_and_cadence:6164,scan_parameters:6163,tx_power:6148,user_data:6172,weight_scale:6173},f={aerobic_heart_rate_lower_limit:10878,aerobic_heart_rate_upper_limit:10884,aerobic_threshold:10879,age:10880,aggregate:10842,alert_category_id:10819,alert_category_id_bit_mask:10818,alert_level:10758,alert_notification_control_point:10820,alert_status:10815,altitude:10931,anaerobic_heart_rate_lower_limit:10881,anaerobic_heart_rate_upper_limit:10882,anaerobic_threshold:10883,analog:10840,apparent_wind_direction:10867,apparent_wind_speed:10866,"gap.appearance":10753,barometric_pressure_trend:10915,battery_level:10777,blood_pressure_feature:10825,blood_pressure_measurement:10805,body_composition_feature:10907,body_composition_measurement:10908,body_sensor_location:10808,bond_management_control_point:10916,bond_management_feature:10917,boot_keyboard_input_report:10786,boot_keyboard_output_report:10802,boot_mouse_input_report:10803,"gap.central_address_resolution_support":10918,cgm_feature:10920,cgm_measurement:10919,cgm_session_run_time:10923,cgm_session_start_time:10922,cgm_specific_ops_control_point:10924,cgm_status:10921,csc_feature:10844,csc_measurement:10843,current_time:10795,cycling_power_control_point:10854,cycling_power_feature:10853,cycling_power_measurement:10851,cycling_power_vector:10852,database_change_increment:10905,date_of_birth:10885,date_of_threshold_assessment:10886,date_time:10760,day_date_time:10762,day_of_week:10761,descriptor_value_changed:10877,"gap.device_name":10752,dew_point:10875,digital:10838,dst_offset:10765,elevation:10860,email_address:10887,exact_time_256:10764,fat_burn_heart_rate_lower_limit:10888,fat_burn_heart_rate_upper_limit:10889,firmware_revision_string:10790,first_name:10890,five_zone_heart_rate_limits:10891,floor_number:10930,gender:10892,glucose_feature:10833,glucose_measurement:10776,glucose_measurement_context:10804,gust_factor:10868,hardware_revision_string:10791,heart_rate_control_point:10809,heart_rate_max:10893,heart_rate_measurement:10807,heat_index:10874,height:10894,hid_control_point:10828,hid_information:10826,hip_circumference:10895,humidity:10863,"ieee_11073-20601_regulatory_certification_data_list":10794,indoor_positioning_configuration:10925,intermediate_blood_pressure:10806,intermediate_temperature:10782,irradiance:10871,language:10914,last_name:10896,latitude:10926,ln_control_point:10859,ln_feature:10858,"local_east_coordinate.xml":10929,local_north_coordinate:10928,local_time_information:10767,location_and_speed:10855,location_name:10933,longitude:10927,magnetic_declination:10796,magnetic_flux_density_2D:10912,magnetic_flux_density_3D:10913,manufacturer_name_string:10793,maximum_recommended_heart_rate:10897,measurement_interval:10785,model_number_string:10788,navigation:10856,new_alert:10822,"gap.peripheral_preferred_connection_parameters":10756,"gap.peripheral_privacy_flag":10754,plx_continuous_measurement:10847,plx_features:10848,plx_spot_check_measurement:10846,pnp_id:10832,pollen_concentration:10869,position_quality:10857,pressure:10861,protocol_mode:10830,rainfall:10872,"gap.reconnection_address":10755,record_access_control_point:10834,reference_time_information:10772,report:10829,report_map:10827,resting_heart_rate:10898,ringer_control_point:10816,ringer_setting:10817,rsc_feature:10836,rsc_measurement:10835,sc_control_point:10837,scan_interval_window:10831,scan_refresh:10801,sensor_location:10845,serial_number_string:10789,"gatt.service_changed":10757,software_revision_string:10792,sport_type_for_aerobic_and_anaerobic_thresholds:10899,supported_new_alert_category:10823,supported_unread_alert_category:10824,system_id:10787,temperature:10862,temperature_measurement:10780,temperature_type:10781,three_zone_heart_rate_limits:10900,time_accuracy:10770,time_source:10771,time_update_control_point:10774,time_update_state:10775,time_with_dst:10769,time_zone:10766,true_wind_direction:10865,true_wind_speed:10864,two_zone_heart_rate_limit:10901,tx_power_level:10759,uncertainty:10932,unread_alert_status:10821,user_control_point:10911,user_index:10906,uv_index:10870,vo2_max:10902,waist_circumference:10903,weight:10904,weight_measurement:10909,weight_scale_feature:10910,wind_chill:10873},g={"gatt.characteristic_extended_properties":10496,"gatt.characteristic_user_description":10497,"gatt.client_characteristic_configuration":10498,"gatt.server_characteristic_configuration":10499,"gatt.characteristic_presentation_format":10500,"gatt.characteristic_aggregate_format":10501,valid_range:10502,external_report_reference:10503,report_reference:10504,number_of_digitals:10505,value_trigger_setting:10506,es_configuration:10507,es_measurement:10508,es_trigger_setting:10509,time_trigger_setting:10510};return{Services:e,Characteristics:f,Descriptors:g,getCanonicalUUID:a,getServiceUUID:b,getCharacteristicUUID:c,getDescriptorUUID:d}}),function(a,b){"function"==typeof define&&define.amd?define(["bleat","bluetooth.helpers"],b):"object"==typeof exports?module.exports=function(a){return b(a,require("./bluetooth.helpers"))}:b(a.bleat,a.bleatHelpers)}(this,function(a,b){"use strict";function c(a){document.log?document.log(a):console.log(a)}function d(a){k&&console.log("INFO: "+a)}function e(a){l&&console.log("DEBUG: "+a)}function f(a){c("ERROR: "+a),n.onError&&n.onError(a)}function g(a){console.log("WARN: "+a)}function h(a){if(!a)return"";for(var b="",c=0;c<a.length;c++){var d=(255&a[c]).toString(16);d=1===d.length?"0"+d:d,b+=d}return b.toUpperCase()}function i(a){var b=new Uint8Array(a.buffer),c=h(b);return e(b+" = "+c),c}function j(a){for(var b=new ArrayBuffer(a.length/2),c=new Uint8Array(b),d=0;d<a.length;d+=2)c[d>>1]=parseInt(a.substr(d,2),16);return c}var k=!1,l=!1,m="wss://localhost:13141/";window.onerror=function(a,b,d,e,f){return c(a+" Script: "+b+" Line: "+d),!1};var n={deviceHandles:{},serviceHandles:{},characteristicHandles:{},descriptorHandles:{},charNotifies:{},adapterState:"unknown",stateCHange:null,foundFn:null,initialised:!1,socket:null,wsIsConnected:!1,peripheralUuid:null,discoverServicesFilter:[],peripheraIsConnected:!1,serviceUuid:null,onNoble_stateChange:null,onNoble_discover:null,onNoble_connect:null,onNoble_disconnect:null,onNoble_discoverServices:null,onNoble_discoverCharacteristics:null,onNoble_write:null,onNoble_error:null,onNoble_discoverBeacon:null,init:function(a,c){return e("Adapter init"),this.initialised?a():void this.ws_connect(m,function(){this.onNoble_discover=function(a){if(this.foundFn){var c=a.address&&"unknown"!==a.address?a.address:a.id;this.deviceHandles[c]||(this.deviceHandles[c]=a);var e=[];a.advertisement.serviceUuids&&(d("discover.serviceInfo = "+a.advertisement.serviceUuids),a.advertisement.serviceUuids.forEach(function(a){e.push(b.getCanonicalUUID(a))}));var g={};a.advertisement.manufacturerData;var h={};if(a.advertisement.serviceData)try{a.advertisement.serviceData.forEach(function(a){h[b.getCanonicalUUID(a.uuid)]=bufferToDataView(a.data)})}catch(i){f("TODO: FIX: "+i)}this.foundFn({_handle:c,id:c,name:a.advertisement.localName,uuids:e,adData:{manufacturerData:g,serviceData:h,txPower:a.advertisement.txPowerLevel,rssi:a.rssi}})}}.bind(this),this.initialised=!0,e("Adatper init complete"),a()}.bind(this))},handleMessage:function(a,c){if("stateChange"==a)this.adapterState=c.state,this.onNoble_stateChange?(d("Adapter State Change received, invoking callback with status="+this.adapterState),this.onNoble_stateChange(this.adapterState)):g("Adapter State Change received, but no callback defined");else if("discover"==a)this.onNoble_discover?this.onNoble_discover(c):g("Discover received, but no callback defined");else if("connect"==a)this.peripheraIsConnected=!0,this.peripheralUuid=c.peripheralUuid,this.onNoble_connect?this.onNoble_connect(c):d("Connect received, but no callback defined");else if("servicesDiscover"==a)if(this.peripheralUuid=c.peripheralUuid,this.onNoble_discoverServices){var f=c.serviceUuids,h=[];f.forEach(function(a){var c=b.getCanonicalUUID(a);h.push({_handle:c,uuid:c,primary:!0})}),e("Discovered services: "+JSON.stringify(h)),this.onNoble_discoverServices(h)}else g("Connect received, but no callback defined");else if("characteristicsDiscover"==a){if(this.peripheralUuid=c.peripheralUuid,this.serviceUuid=c.serviceUuid,this.onNoble_discoverCharacteristics){var i=c.characteristics,h=[];i.forEach(function(a){var c=b.getCanonicalUUID(a.uuid);h.push({_handle:c,uuid:c,properties:{broadcast:a.properties.indexOf("broadcast")>=0,read:a.properties.indexOf("read")>=0,writeWithoutResponse:a.properties.indexOf("writeWithoutResponse")>=0,write:a.properties.indexOf("write")>=0,notify:a.properties.indexOf("notify")>=0,indicate:a.properties.indexOf("indicate")>=0,authenticatedSignedWrites:a.properties.indexOf("authenticatedSignedWrites")>=0,reliableWrite:a.properties.indexOf("reliableWrite")>=0,writableAuxiliaries:a.properties.indexOf("writableAuxiliaries")>=0}})}),e("Discovered characteristics: "+JSON.stringify(h)),this.onNoble_discoverCharacteristics(h)}}else if("write"==a);else if("read"==a)if(d("read"+JSON.stringify(c)),c.isNotification===!0)if(this.onNoble_notifyRead){e("data: "+JSON.stringify(c.data));var k=j(c.data);e("dataView: "+JSON.stringify(k)),this.onNoble_notifyRead(k)}else d("Notification received, no handler found");else e("not a notification");else"discoverBeacon"==a?this.onNoble_discoverBeacon&&this.onNoble_discoverBeacon(c):"handleNotify"==a||"handleNotify"==a||g("Unimplemented: "+a)},startScan:function(a,b,c,f){d("start scan"),this.init(function(){this.deviceHandles={};var c=function(c){d("stateCB, checking adapter status: "+c),"poweredOn"===c?(0===a.length?this.foundFn=b:this.foundFn=function(c){a.forEach(function(a){return c.uuids.indexOf(a)>=0?void b(c):void 0})},this.ws_send({action:"startScanning"})):f("adapter not enabled")}.bind(this);e("Scan Adapter state check..."+this.adapterState),"unknown"===this.adapterState?(e("Unknown, defering init"),this.onNoble_stateChange=c.bind(this)):(e("Not unknown, starting init"),c(this.adapterState))}.bind(this),f)},stopScan:function(a){this.ws_send(JSON.stringify({action:"stopScanning"}))},connect:function(a,b,c,d){this.onNoble_connect=b,this.onNoble_disconnect=c,this.onNoble_error=d;var e=this.deviceHandles[a];this.ws_send({action:"connect",peripheralUuid:e.peripheralUuid})},disconnect:function(a,b){d("disconnect"),this.ws_send({action:"disconnect",peripheralUuid:this.peripheralUuid})},discoverServices:function(a,b,c,e){d("discoverServices"),this.discoverServicesFilter=b,this.onNoble_discoverServices=c,this.onNoble_error=e,this.ws_send({action:"discoverServices",peripheralUuid:this.peripheralUuid})},discoverIncludedServices:function(a,b,c,e){d("discoverIncludedServices")},discoverCharacteristics:function(a,b,c,e){d("discoverCharacteristics: "+a,b),this.onNoble_discoverCharacteristics=c,this.onNoble_error=e,this.ws_send({action:"discoverCharacteristics",peripheralUuid:this.peripheralUuid,serviceUuid:a.replace(/-/g,"")})},discoverDescriptors:function(a,b,c,e){d("discoverDescriptors")},readCharacteristic:function(a,b,c){d("readCharacteristic")},writeCharacteristic:function(a,b,c,e){d("writeCharacteristic: "+b),this.onNoble_write=c,this.onNoble_error=e,this.ws_send({action:"write",peripheralUuid:this.peripheralUuid,serviceUuid:this.serviceUuid.replace(/-/g,""),characteristicUuid:a.replace(/-/g,""),data:i(b)})},enableNotify:function(a,b,c,e){d("enableNotify:"),this.onNoble_notifyRead=b,this.onNoble_notifyEnabled=c,this.onNoble_error=e,this.ws_send({action:"notify",peripheralUuid:this.peripheralUuid,serviceUuid:this.serviceUuid.replace(/-/g,""),characteristicUuid:a.replace(/-/g,""),notify:!0})},disableNotify:function(a,b,c){d("disableNotify")},readDescriptor:function(a,b,c){d("readDescriptor")},writeDescriptor:function(a,b,c,e){d("writeDescriptor")},ws_onOpen:function(){d("onOpen"),this.wsIsConnected=!0,this.wsContinueFn&&this.wsContinueFn()},ws_onClose:function(){d("onClose"),this.wsIsConnected=!1,this.peripheraIsConnected&&this.disconnect()},ws_onError:function(a){f("WebSocket failure, service not running?"),this.peripheraIsConnected&&this.disconnect()},ws_onMessage:function(a){if(a=a.data,e("ws_onMessage:"+JSON.stringify(a)),a&&a.length>0){var b=JSON.parse(a),c=b.type;c?(e("Handling message for : "+c),this.handleMessage(c,b)):f("no msgType in WS message JSON payload")}else f("no data in WS message")},ws_send:function(a){a=JSON.stringify(a),this.wsIsConnected?(e("SEND: "+a),this.socket.send(a)):f("WebSocket is not connected.")},ws_connect:function(a,b){this.url=a,this.socket=new WebSocket(this.url),this.socket.onopen=this.ws_onOpen.bind(this),this.socket.onerror=this.ws_onError.bind(this),this.socket.onclose=this.ws_onClose.bind(this),this.socket.onmessage=this.ws_onMessage.bind(this),this.wsContinueFn=b},startBeaconScanning:function(a){d("startBeaconScanning"),this.onNoble_discoverBeacon=a,this.ws_connect(m,function(){this.ws_send({action:"startBeaconScanning"})})},stopBeaconScanning:function(){this.onNoble_discoverBeacon=null,this.ws_send({action:"stopBeaconScanning"})}};return navigator.bluetooth?void d("Native Web Bluetooth API found."):(d("Native Web Bluetooth API NOT found, injecting WebBluetooth shim and beaconscanner"),navigator.bluetooth=a,navigator.beaconscanner=n,void a._addAdapter("bubbleworks",n))});